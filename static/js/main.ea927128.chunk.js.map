{"version":3,"sources":["components/Picker.js","components/BioInfo.js","components/Chart.js","components/CommitteeListItem.js","components/CommitteeList.js","components/InfoPanel.js","App.js","reportWebVitals.js","index.js"],"names":["Picker","onSelect","useState","senators","setSens","pickerItems","setPickerItems","pickerStyles","container","provided","control","indicatorSeparator","placeholder","input","singleValue","dropdownIndicator","useEffect","getSens","a","fetchSenators","fetch","res","json","data","objects","map","dataItem","value","label","person","name","className","length","styles","options","onChange","BioInfo","bioData","FECData","massTotal","undefined","firstElected","setFirstElected","timesElected","setTimesElected","nextElectionYear","setNextElectionYear","formatter","Intl","NumberFormat","style","currency","description","firstname","nickname","lastname","role_type_label","format","Chart","candidateID","totalsData","chartLabels","setChartLabels","chartData","setChartData","getInfo","yearLabels","contributionAmounts","forEach","_cycleResult","_yearsLabel","moment","coverage_start_date","coverage_end_date","push","reverse","_chartData","labels","datasets","backgroundColor","scales","x","grid","display","ticks","maxTicksLimit","y","color","callback","index","values","plugins","legend","tooltip","enabled","title","CommitteeListItem","cash","setCash","prevYTD","setPrevYTD","curYTD","setCurYTD","buildUrl","endpoint","params","fetchUrl","_param","_index","fetchData","committee_id","fetchInfo","info","results","cash_on_hand_end_period","total_contributions_ytd","_report","report_type","amendment_indicator","Date","getFullYear","report_year","designation_full","toLowerCase","first_file_date","last_file_date","fromNow","CommitteeList","listItems","list","setList","showOlder","setShowOlder","getComittees","_filtered","filter","_result","_item","Math","abs","toString","onClick","InfoPanel","candidateTotals","setCandidateTotals","setMassTotal","candidate_id","_filteredData","_massTotal","contributions","App","setBioData","setFECData","senatorSelected","senatorBioData","state","e","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea927128.chunk.js","sourcesContent":["import Select from 'react-select';\nimport { useState, useEffect } from 'react';\n\nconst Picker = ({ onSelect }) => {\n    const [senators, setSens] = useState([])\n    const [pickerItems, setPickerItems] = useState([])\n    const pickerStyles = {\n          container: (provided) => ({\n            ...provided,\n            'backgroundColor': 'transparent',\n            'border': 'none'\n          }),\n          control: (provided) => ({\n            ...provided,\n            'display': 'flex',\n            'backgroundColor': 'transparent',\n            'border': 'none'\n          }),\n          \n          indicatorSeparator: (provided) => ({\n            ...provided,\n            'display': 'none'\n          }),\n          placeholder: (provided) => ({\n            ...provided,\n            'color': 'white',\n          }),\n          input: (provided) => ({\n            ...provided,\n            'color': 'white'\n          }),\n          singleValue: (provided) => ({\n            ...provided,\n            'color': 'white',\n            'fontWeight': '700'\n          }),\n          dropdownIndicator: (provided) => ({\n            ...provided,\n            'color': 'white'  \n          })\n    }\n\n    useEffect(() => {\n        const getSens = async () => {\n          const senators = await fetchSenators();\n          setSens(senators)\n        }\n    \n        getSens()\n      }, []);\n    \n      const fetchSenators = async () => {\n        const res = await fetch('https://www.govtrack.us/api/v2/role?current=true&role_type=senator')\n        const data = await res.json()\n        const objects = data['objects'];\n        const pickerItems = objects.map((dataItem) => {\n          return {value: dataItem, label: dataItem.person.name}\n        });\n        setPickerItems(pickerItems);\n        return objects\n      }\n\n    return (\n        <div className={\"pickerContainer\"}>\n            {senators.length > 0 && <Select\n            className=\"picker\"\n            styles={pickerStyles}\n            options={pickerItems}\n            onChange={onSelect}\n            />}\n        </div>\n    )\n}\n\nexport default Picker\n","import { useEffect, useState } from 'react';\n\nconst BioInfo = ({ bioData, FECData, massTotal }) => {\n    const [firstElected, setFirstElected] = useState(undefined)\n    const [timesElected, setTimesElected] = useState(undefined)\n    const [nextElectionYear, setNextElectionYear] = useState(undefined)\n\n    useEffect(() => {\n        setTimesElected(FECData['election_years'].length - 1)\n        setNextElectionYear(FECData['election_years'][FECData['election_years'].length - 1])\n        setFirstElected(FECData['election_years'][0])\n    }, [bioData, FECData]);\n\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n    })\n\n    return (\n        <div className=\"bioInfo\">\n            <>\n            {bioData && <section>\n                <span className=\"topline\">{bioData.person.name}</span>\n                <span className=\"subtitle\">{bioData.description}</span>\n            </section>}\n            {\n                <section>\n                    <p>\n                        <span>{bioData.person.firstname} </span>\n                        {bioData.person.nickname && <span>{'\"'+bioData.person.nickname+'\"'}</span>}\n                        <span> {bioData.person.lastname}</span>\n                        <span> is the {bioData.description}.</span>\n                    </p>\n                    <p>\n                        {firstElected && \n                            <span> {bioData.role_type_label} {bioData.person.lastname} was first elected to the Senate in {firstElected},</span>\n                        }\n                        {timesElected && <span> and has been elected {timesElected} time{timesElected > 1 && 's'}</span>}\n                        {nextElectionYear && <span> and is up for reelection in {nextElectionYear}.</span>}\n                    </p>\n                    <p>\n                        {massTotal && \n                            <span> \n                            Since {firstElected} {bioData.role_type_label} {bioData.person.lastname} has personally raised at least {formatter.format(massTotal) + ' '}\n                            </span>\n                        }\n                    </p>\n                </section>\n            }\n            </>\n        </div>\n    )\n}\n\nexport default BioInfo\n","import { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport moment from 'moment'\n\nconst Chart = ({ candidateID, totalsData }) => {\n    const [chartLabels, setChartLabels] = useState(undefined)\n    const [chartData, setChartData] = useState(undefined)\n    \n\n    useEffect(() => {\n        const getInfo = async () => {\n            let yearLabels = []\n            let contributionAmounts = []\n            totalsData.forEach((_cycleResult) => {\n                const _yearsLabel = (\n                    moment(_cycleResult.coverage_start_date).format('yyyy') + ' - ' +\n                    moment(_cycleResult.coverage_end_date).format('yyyy')\n                )\n                yearLabels.push(_yearsLabel)\n                contributionAmounts.push(_cycleResult['contributions'])\n            });\n            setChartData(contributionAmounts.reverse())\n            setChartLabels(yearLabels.reverse())\n        }\n\n          getInfo()\n    }, [candidateID, totalsData]);\n\n    const _chartData = {\n        labels: chartLabels,\n        datasets: [{\n            label: 'Dollars Raised',\n            data: chartData,\n            backgroundColor: 'blue'\n        }],\n    }\n    const options = {\n        scales: {\n            x:{\n                grid:{\n                 display:false\n                },\n                ticks: {\n                    maxTicksLimit: 5\n                }\n               },\n            y:{\n                grid:{\n                 display:true,\n                 color: 'black'\n                },\n                ticks: {\n                    callback: function(value, index, values) {\n                        return index % 2 === 0 ? '$' + (value/1000000) + 'M' : '';\n                    },\n                    color: 'black',\n                }\n               },\n               \n        },\n        plugins: {\n            legend: {\n                display: false\n            },\n            tooltip: {\n                enabled: false\n            },\n            title: {\n                display: false\n            }\n        }\n      };\n    return (\n        <div className=\"chart-container\">\n            <Bar data={_chartData} options={options}/>\n        </div>\n    )\n}\n\nexport default Chart\n","import { useState, useEffect} from 'react';\nimport moment from 'moment'\n\nconst CommitteeListItem = ({ data }) => {\n    const [cash, setCash] = useState(undefined)\n    const [prevYTD, setPrevYTD ] = useState(undefined)\n    const [curYTD, setCurYTD ] = useState(undefined)\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const endpoint = 'committee/' + data.committee_id + '/reports'\n            const params = [\n                'page=1',\n                'sort_nulls_last=false',\n                'per_page=10',\n                'sort_null_only=false',\n                'sort_hide_null=false'\n            ]\n            const fetchInfo = await fetch(buildUrl(endpoint, params))\n            const info = await fetchInfo.json()\n            const formatter = new Intl.NumberFormat('en-US', {\n                style: 'currency',\n                currency: 'USD',\n            })\n            if (info.results[0]) {\n                setCash(formatter.format(info.results[0].cash_on_hand_end_period));\n                setCurYTD(formatter.format(info.results[0].total_contributions_ytd))\n            }\n            info.results.forEach((_report) => {\n                if (_report.report_type === \"YE\"\n                    && _report.amendment_indicator !== \"A\"\n                    && ((new Date().getFullYear() - 1) - _report.report_year) === 1\n                    ){\n                    setPrevYTD(formatter.format(_report.total_contributions_ytd))\n                }\n            })\n        }\n\n        fetchData()\n    }, [data]);\n\n\n    function buildUrl(endpoint, params) {\n        let baseUrl = 'https://api.open.fec.gov/v1/'\n        let key = '&api_key=z777qVMhaX87xQbmyv9YUaaH2R6kODSpXoop10j8'\n        let fetchUrl = baseUrl + endpoint + '?';\n        params.forEach((_param, _index) => {\n            fetchUrl = fetchUrl + (_index !== 0 ? ('&' + _param): _param)\n        })\n        fetchUrl = fetchUrl + key\n        return fetchUrl\n    }\n\n\n\n    return (\n        <div className=\"comListItem\">\n            <p>\n                <span>{data.name}</span>\n                <span> is a {data.designation_full.toLowerCase()}</span>\n                <span> that has been active since {moment(data.first_file_date).format('yyyy')}</span>\n                {cash && \n                    <>\n                    <span>{' and has ' + cash + ' cash on hand'}</span>\n                    <span>{' as reported ' + moment(data.last_file_date).fromNow()}</span>\n                    </>\n                }\n            </p>\n            <span> Last Year {data.name} raised {prevYTD} and has raised {curYTD} so far this year</span>\n\n        </div>\n    )\n}\n\nexport default CommitteeListItem\n","import { useState, useEffect } from 'react';\nimport { buildUrl } from '../App';\nimport CommitteeListItem from './CommitteeListItem'\nconst CommitteeList = ({ candidateID }) => {\n    const [list, setList] = useState(undefined)\n    const [showOlder, setShowOlder] = useState(false)\n\n    useEffect(() => {\n        const getComittees = async () => {\n            const endpoint = `candidate/${candidateID}/committees`\n            const params = [\n                'page=1',\n                'sort_nulls_last=false',\n                'sort=-last_file_date',\n                'per_page=100',\n                'sort_null_only=false',\n                'sort_hide_null=false'\n            ]\n            const fetchInfo = await fetch(buildUrl(endpoint, params))\n            const info = await fetchInfo.json()\n            const _filtered = info.results.filter((_result) => true)\n            setList(_filtered)\n        }\n        \n        getComittees()\n    }, [candidateID]);\n\n\n    let listItems;\n    if (list) {\n        listItems = list.map((_item, index) => {\n            const diff = Math.abs(new Date().getFullYear() - new Date(_item.last_file_date).getFullYear())\n            return ((diff <= 1 || showOlder) && \n                <CommitteeListItem \n                    key={index.toString()} \n                    data={_item}\n                    className='comListItem' \n                />\n            )\n        });\n    }\n    return (\n        <div className=\"comListContainer\">\n            <ul>{listItems}</ul>\n            <button onClick={() => setShowOlder(!showOlder)}>\n                {showOlder ? 'Hide inactive comittees' : 'Show inactive comittees'}\n            </button>\n        </div>\n    )\n}\n\nexport default CommitteeList\n","import { useEffect, useState } from 'react';\nimport { buildUrl } from '../App';\nimport BioInfo from './BioInfo';\nimport Chart from './Chart';\nimport CommitteeList from './CommitteeList';\n\nconst InfoPanel = ({ bioData, FECData }) => {\n    const [candidateTotals, setCandidateTotals] = useState(undefined)\n    const [massTotal, setMassTotal] = useState(undefined)\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const endpoint = `candidate/${FECData.candidate_id}/totals/`\n            const params = [\n                'election_full=true',\n                'sort_nulls_last=true',\n                'sort=cycle',\n                'per_page=50'\n            ]\n            const fetchInfo = await fetch(buildUrl(endpoint, params))\n            const info = await fetchInfo.json()\n            const _filteredData = await info.results.filter((_result) => _result['contributions'] > 0)\n            setCandidateTotals(_filteredData)\n            let _massTotal = 0;\n            _filteredData.forEach((_cycleResult) => {\n                _massTotal = _massTotal + _cycleResult.contributions\n            })\n            setMassTotal(_massTotal)\n        }\n        fetchData()\n    }, [FECData]);\n    \n    return (\n        <div className=\"infoPanel bioInfo\">\n            <BioInfo bioData={bioData} FECData={FECData} massTotal={massTotal}/>\n            {candidateTotals && <Chart candidateID={FECData.candidate_id} totalsData={candidateTotals}/>}\n            <p>\n                <span>this total does not include funds raised by committees associated with {bioData.role_type_label} {bioData.person.lastname} which are listed below.</span>\n            </p>\n            <p>\n                <span>it also does not include funds raised through PACs, Super-PACs, and 501(c) groups</span>\n            </p>\n            <CommitteeList candidateID={FECData.candidate_id}/>\n        </div>\n    )\n}\n\nexport default InfoPanel\n","import './App.css';\nimport { useState } from 'react';\nimport Picker from './components/Picker';\nimport InfoPanel from './components/InfoPanel';\n\n\nexport function buildUrl(endpoint, params) {\n  let baseUrl = 'https://api.open.fec.gov/v1/'\n  let key = '&api_key=z777qVMhaX87xQbmyv9YUaaH2R6kODSpXoop10j8'\n  let fetchUrl = baseUrl + endpoint + '?';\n  params.forEach((_param, _index) => {\n      fetchUrl = fetchUrl + (_index !== 0 ? ('&' + _param): _param)\n  })\n  fetchUrl = fetchUrl + key\n  return fetchUrl\n}\n\nfunction App() {\n  const [bioData, setBioData] = useState(undefined)\n  const [FECData, setFECData] = useState(undefined)\n\n  function buildUrl(endpoint, params) {\n    let baseUrl = 'https://api.open.fec.gov/v1/'\n    let key = '&api_key=z777qVMhaX87xQbmyv9YUaaH2R6kODSpXoop10j8'\n    let fetchUrl = baseUrl + endpoint + '?';\n    params.forEach((_param, _index) => {\n        fetchUrl = fetchUrl + (_index !== 0 ? ('&' + _param): _param)\n    })\n    fetchUrl = fetchUrl + key\n    return fetchUrl\n  }\n\n  const senatorSelected = async (senatorBioData) => {\n    setBioData(senatorBioData)\n    const params = [\n      'office=S',\n      'sort=-election_years',\n      'incumbent_challenge=I',\n      `state=${senatorBioData.state}`,\n      `name=${senatorBioData.person.lastname}`\n    ]\n    const res = await fetch(buildUrl('candidates/search', params))\n    const data = await res.json()\n    setFECData(data['results'][0])\n  }\n  \n  return (\n    <div className=\"App\">\n      <Picker onSelect={(e) => senatorSelected(e.value)}/>\n      {FECData && \n        <InfoPanel bioData={bioData} FECData={FECData}>\n\n        </InfoPanel>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}